<%%
	@page_scope = '<%= plural_table_name %>.index'
	@deactivated_module = defined?(<%= class_name %>.new.deactivated_module)
%>
<h4><%%= I18n.translate('header', :scope => @page_scope) %></h4>

<%
g_parent_assoc = ''
attributes.each do |attribute|
	if attribute.type.to_s == 'association'
		g_parent_assoc = attribute.name
		break
	end
end

# generate this page only if there are references / associations in this resource
# otherwise the standard index.html.erb should be used, since there should be no foreign key association herel
if g_parent_assoc == ''
	# no references, using simple index listing (without parent association breaks).
%>
<%%= render :partial => '<%= plural_table_name %>/list' %>
<%
else # have references, use index listing with parent association breaks.
%>
<!-- update this to have "parent_assoc" represent the name of the parent resource / association -->
<table cellspacing="0">
<%%
last_parent_assoc_id = 0
parent_association = ""
last_parent_association = ""
@<%= plural_table_name %>.each do |item|
		# only show deactivated item if deactivated module installed, and show deactivated is set.
		( @deactivated_module && !show_deactivated? && item.deactivated? ) ? show_row = false : show_row = true
	if show_row
		parent_association = item.send('<%= g_parent_assoc %>')
		# Rails.logger.debug("G index.html.erb parent_association = #{parent_association.inspect.to_s}")
		if last_parent_assoc_id != parent_association.id
%>
			</table>
			<%%= link_to "New #{last_parent_association.nil_to_s} <%= class_name %>", new_<%= singular_table_name %>_<%= g_parent_assoc %>_path(last_parent_assoc_id, :<%= g_parent_assoc %>_id => last_parent_assoc_id.to_s) if last_parent_assoc_id != 0 %><br>
			<br>
			<h3><%%= link_to parent_association.nil_to_s, <%= g_parent_assoc %>_path(parent_association.id) %> (<%= g_parent_assoc.camelize %>)</h3>
			<table cellspacing="0">
			<%%= render :partial => '<%= plural_table_name %>/index_head' %>
<%%
			last_parent_assoc_id = parent_association.id
			last_parent_association = parent_association
		end # break in parent_assoc_id
%>
	<%%= render :partial => '<%= plural_table_name %>/index_row', :locals => { :item => item } %>
<%% end # if show_row
end # if table.each %>

</table>

<%% if last_parent_assoc_id != 0 %>
	<%%= link_to "New #{last_parent_association.nil_to_s} <%= class_name %>", new_<%= singular_table_name %>_<%= g_parent_assoc %>_path(last_parent_assoc_id, :<%= g_parent_assoc.camelize %>_id => last_parent_assoc_id.to_s) %><br>
<%% end # if last_parent_assoc_id %>
<% end # if have_association
%>
<br>
<%%= link_to I18n.translate('<%= plural_table_name %>.new.action'), new_<%= singular_table_name %>_path %>
