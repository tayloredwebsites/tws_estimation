<%
est_comp_errors = ''
if ass_comp.required
	ass_comp_req = 'component_value required'
	if est_comp_value_was_str != '' &&  est_comp_value_str == '0.00'
		# estimate component existed already, and has a zero value now
		est_comp_errors = ' * ' + I18n.translate('error_messages.missing_required_field')
	end
else
	ass_comp_req = 'component_value not_required'
end

hourly_calculations = "@ est_comp.hourly_rate = $ est_comp.hourly_dollars"

# estimate_components_was[#{ass.id.to_s}_#{ass_comp.component.id.to_s}] != 
%>
		<div class="field row_with_calculations">
<%
if !est_comp_errors.blank?
	concat content_tag(:span, label_tag("estimate_components[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", ass_comp.nil_to_s, :class => 'label' ), :class => "field_with_errors")
else
	concat (label_tag "estimate_components[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", ass_comp.nil_to_s, :class => 'label')
end
%>
			<div class="value">
<%
if !est_comp_errors.blank?
%>
				<span class="field_with_errors">
<%
end
if view_mode == 'edit'
	concat content_tag(:span, text_field_tag("estimate_components[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", est_comp_value_str), :class => ass_comp_req)
	# if component type is hourly
	#     concat content_tag(:span, hourly_calculations, :class="estimate_hourly_calculations")
	# end
%> <%= content_tag :span, :class => 'estimate_tax_calculations' do %>
<%
	    # note concat on the nested content tags does not work - must use the expression tag
        concat content_tag(:span, label_tag("estimate_components_tax_pct[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", 'tax %' ))
        concat content_tag(:span, text_field_tag("estimate_components_tax_pct[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", est_comp.tax_percent_for(@estimate, ass_comp.component).bd_to_s(3)))
        concat content_tag(:span, ' => $ '+ "#{est_comp.tax_amount.bd_to_s(2)}", :id => "estimate_components_tax_amt_#{ass.id.to_s}_#{ass_comp.component.id.to_s}")
    end
	concat content_tag(:span, text_field_tag("estimate_components_note[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", est_comp_note), :class => 'component_note')
%> <%= content_tag :span, :class => 'component_hidden_fields' do %>
<%
	    # note concat on the nested content tags does not work - must use the expression tag
    	concat hidden_field_tag("estimate_components_was[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]",  est_comp_value_was_str)
        concat hidden_field_tag("estimate_components_tax_pct_was[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", est_comp.tax_percent_for(@estimate, ass_comp.component).bd_to_s(3))
	    concat hidden_field_tag("estimate_components_note_was[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", est_comp_note)
	end
else
    concat content_tag(:span, est_comp_value_str, :class => "#{ass_comp_req}",  :id => "estimate_components_#{ass.id.to_s}_#{ass_comp.component.id.to_s}")
%> <%= content_tag :span, :class => 'estimate_tax_calculations' do %>
<%
	    # note concat on the nested content tags does not work - must use the expression tag
        concat content_tag(:span, label_tag("estimate_components_tax_pct[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", 'tax %' ))
        concat content_tag(:span, est_comp.tax_percent.bd_to_s(3), :id => "estimate_components_tax_pct_#{ass.id.to_s}_#{ass_comp.component.id.to_s}")
        concat content_tag(:span, ' => $ '+ "#{est_comp.tax_amount.bd_to_s(2)}", :id => "estimate_components_tax_amt_#{ass.id.to_s}_#{ass_comp.component.id.to_s}")
    end
    concat content_tag(:span, est_comp_note, :id => "estimate_components_note_#{ass.id.to_s}_#{ass_comp.component.id.to_s}", :class => 'component_note')
end
if !est_comp_errors.blank?
%>
					<span class="field_error"><%= est_comp_errors %></span>
				</span>
<%
end
%>
			</div>
		</div>
