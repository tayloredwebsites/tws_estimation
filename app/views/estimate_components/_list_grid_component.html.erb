<%
est_comp_errors = ''
row_class = ''
ass_comp_req = 'component_value'
if ass_comp.required
	ass_comp_req += ' required'
	if est_comp_value_was_str != '' &&  est_comp_value_str == '0.00'
		# estimate component existed already, and has a zero value now
		est_comp_errors += ' - ' + I18n.translate('error_messages.missing_required_field')
		row_class = "field_with_errors"
	end
else
	ass_comp_req += ' not_required'
end
if !ass_comp.component.is_valid_grid_operand? && !ass_comp.component.is_valid_grid_scope?
	row_class = "field_with_errors"
	est_comp_errors += ' - ' + I18n.translate('error_messages.missing_component_scope_operand')
elsif !ass_comp.component.is_valid_grid_operand?
	row_class = "field_with_errors"
	est_comp_errors += ' - ' + I18n.translate('error_messages.missing_component_operand')
elsif !ass_comp.component.is_valid_grid_scope?
	row_class = "field_with_errors"
	est_comp_errors += ' - ' + I18n.translate('error_messages.missing_component_scope')
end
if extra_hourly_conversion
    est_comp_errors += ' - ' + I18n.translate('error_messages.invalid_hourly_conversion')
    row_class = "field_with_errors"
end
%>
				<tr class="grid_row<%= row_class %>">
					<td class="grid_row_label" id="grid_label_<%= ass.id.to_s %>_<%= ass_comp.component.component_type.id.to_s %>_<%= ass_comp.component.id.to_s %>">
<%
# display_value = operation_value.bd_to_s(2)
if editable && view_mode == 'edit'
	concat label_tag "estimate_components[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", ass_comp.nil_to_s+' ( '+ass_comp.component.get_grid_scope_or_warn+' '+ass_comp.component.get_grid_operand_or_warn+' ', :class => 'label'
	concat content_tag(:span, text_field_tag("estimate_components[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", est_comp_value_str), :class => ass_comp_req)
	concat ')'
    # content_tag :span, :class => 'estimate_tax_calculations' do
    #       # dont do tax on grid, as taxes are already taken out at the individual components already.
    #       # note concat on the nested content tags does not work - must use the expression tag to contain them
    #     concat content_tag(:span, label_tag("estimate_components_tax_pct[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", 'tax %' ))
    #     concat content_tag(:span, text_field_tag("estimate_components_tax_pct[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", est_comp.tax_percent_for(@estimate, ass_comp.component).bd_to_s(3)))
    #     concat content_tag(:span, ' => $ '+ "#{est_comp.tax_amount.bd_to_s(2)}", :id => "estimate_components_tax_amt_#{ass.id.to_s}_#{ass_comp.component.id.to_s}")
    # end
    # note no note in grid layout - no room for it and grid
%> <%= content_tag :span, :class => 'component_hidden_fields' do %>
<%
	    # note concat on the nested content tags does not work - must use the expression tag
    	concat hidden_field_tag("estimate_components_was[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]",  est_comp_value_was_str)
        concat hidden_field_tag("estimate_components_tax_pct_was[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", est_comp.tax_percent_for(@estimate, ass_comp.component).bd_to_s(3))
	end
else
	concat content_tag(:span, ass_comp.nil_to_s+' ( '+ass_comp.component.get_grid_scope_or_warn+' '+ass_comp.component.get_grid_operand_or_warn+' '+est_comp_value_str+')', :class => ass_comp_req)
    # content_tag :span, :class => 'estimate_tax_calculations' do
#       # dont do tax on grid, as taxes are already taken out at the individual components already.
#         concat content_tag(:span, label_tag("estimate_components_tax_pct[#{ass.id.to_s}_#{ass_comp.component.id.to_s}]", 'tax %' ))
#         concat content_tag(:span, est_comp.tax_percent.bd_to_s(3), :id => "estimate_components_tax_pct_#{ass.id.to_s}_#{ass_comp.component.id.to_s}")
#         concat content_tag(:span, ' => $ '+ "#{est_comp.tax_amount.bd_to_s(2)}", :id => "estimate_components_tax_amt_#{ass.id.to_s}_#{ass_comp.component.id.to_s}")
#     end
end
if !est_comp_errors.blank?
	concat content_tag(:span, est_comp_errors, :class => 'field_error')
end
%>
					</td>
<%
row_total = BIG_DECIMAL_ZERO
tax = est_comp.tax_amount.nil? ? BIG_DECIMAL_ZERO : est_comp.tax_amount
@component_types_list.each do |ct|
    hours_label = is_in_dollars[ct.id] ? '' : I18n.translate('view_field_labels.in_hours')
	if ct.in_totals_grid
		row_total += comp_calculations[ct.id] if !comp_calculations[ct.id].nil?
		# only show calculations (debug_str) if hourly calculation on hours or dollar calculation on dollars
        # dollar_calc = ass_comp.component.grid_scope != 'H' && is_in_dollars[ct.id]
        # hourly_calc = ass_comp.component.grid_scope == 'H' && !is_in_dollars[ct.id]
        # show_debug = (dollar_calc || hourly_calc) ? true : false
        show_debug = true
		Rails.logger.debug("VVVVShowDebug ass_comp.component.grid_scope = #{ass_comp.component.grid_scope.inspect.to_s}, is_in_dollars[ct.id] = #{is_in_dollars[ct.id].inspect.to_s}, debug_inputs = #{debug_inputs.inspect.to_s}, comp_calculations = #{comp_calculations.inspect.to_s}")
		debug_str = (defined?(debug_inputs) && show_debug) ? ( debug_inputs[ct.id].bd_to_s(2) )+debug_formula+' = ' : ''  #  && !debug_inputs[ct.id].nil?
%>
					<td class="grid_row_calc" id="grid_calc_<%= ass.id.to_s %>_<%= ass_comp.component.component_type.id.to_s %>_<%= ass_comp.component.id.to_s %>_<%= ct.id.to_s %>"><%= debug_str+comp_calculations[ct.id].bd_to_s(2) %><%= hours_label %></td>
<%
	end
end
%>
					<td class="grid_row_calc grid_row_sub_total" id="grid_calc_<%= ass.id.to_s %>_<%= ass_comp.component.component_type.id.to_s %>_<%= ass_comp.component.id.to_s %>_tax"><%= tax.bd_to_s(2) %></td>
					<td class="grid_row_calc grid_row_sub_total" id="grid_calc_<%= ass.id.to_s %>_<%= ass_comp.component.component_type.id.to_s %>_<%= ass_comp.component.id.to_s %>_total"><%= row_total.bd_to_s(2) %></td>
				</tr>
